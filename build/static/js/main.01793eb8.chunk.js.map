{"version":3,"sources":["assets/illustration.svg","assets/logo.svg","assets/google-icon.svg","components/Button.tsx","services/firebase.ts","contexts/AuthContextProvider.tsx","hooks/UseAuth.ts","pages/Home.tsx","pages/NewRoom.tsx","assets/copy.svg","components/RoomCode.tsx","components/Question.tsx","hooks/useRoom.ts","pages/Room.tsx","assets/delete.svg","assets/check.svg","assets/answer.svg","pages/AdmininRoom.tsx","App.tsx","index.tsx"],"names":["Button","isOutlined","props","className","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","database","AuthContext","createContext","AuthContextProvider","useEffect","unsubscribe","onAuthStateChanged","user","displayName","photoURL","uid","Error","setUser","id","name","avatar","useState","a","provider","GoogleAuthProvider","signInWithPopup","result","Provider","value","loginWithGoogle","children","UseAuth","useContext","Home","history","useHistory","push","roomID","setRoomID","event","preventDefault","console","log","trim","ref","get","exists","alert","src","wallPaper","alt","logo","onClick","googleIcon","onSubmit","type","placeholder","onChange","target","NewRoom","newRoom","setNewRoom","roomRef","roomName","authorID","firebaseRoom","key","to","RoomCode","navigator","clipboard","writeText","roomCode","copyImg","Question","content","author","isAnswered","isHighlighted","useRoom","roomId","questions","setQuestions","title","setTitle","on","room","roomValues","val","firebaseQuestions","question","parsedQuestions","Object","entries","map","likeCount","values","likes","length","likeId","find","authorId","off","Room","useParams","setQuestion","questionId","remove","questionUnite","logoImg","disabled","area-label","handleLike","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","AdminRoom","update","endedAt","Date","window","confirm","handleCheckQuestionAsAnswered","checkImg","handleHighlightQuestion","answerImg","handleDeleteQuestion","deleteImg","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01793eb8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/illustration.ae7276f0.svg\";","export default __webpack_public_path__ + \"static/media/logo.a88331cb.svg\";","export default __webpack_public_path__ + \"static/media/google-icon.df15d8e5.svg\";","import { useState } from \"react\";\r\nimport {ButtonHTMLAttributes} from 'react';\r\n\r\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement> & {\r\n    isOutlined? : boolean\r\n};\r\n\r\nexport function Button({isOutlined = false, ...props} : ButtonProps){\r\n\r\n    return  <button className={`button ${isOutlined ? ' outlined' : '' }`} {...props}/>;\r\n\r\n}","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\n\r\n/*const firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };*/\r\n\r\n  const firebaseConfig = {\r\n    apiKey: \"AIzaSyByF-Q0owhDcV_yTytagr1O4BcIUW9yz0I\",\r\n    authDomain: \"letmeask-cfa87.firebaseapp.com\",\r\n    databaseURL: \"https://letmeask-cfa87-default-rtdb.firebaseio.com\",\r\n    projectId: \"letmeask-cfa87\",\r\n    storageBucket: \"letmeask-cfa87.appspot.com\",\r\n    messagingSenderId: \"28201384546\",\r\n    appId: \"1:28201384546:web:cfbeeb54e6ce9c11e5af3b\"\r\n  };\r\n  \r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst auth = firebase.auth();\r\nconst database = firebase.database();\r\n\r\nexport {firebase, auth, database};","import { Children, ReactNode, createContext, useEffect, useState } from \"react\";\r\nimport { firebase, auth } from \"../services/firebase\";\r\n\r\nexport const AuthContext = createContext({} as AuthContextType);\r\n\r\ntype User = {\r\n    id: string,\r\n    name: string,\r\n    avatar: string\r\n}\r\n  \r\ntype AuthContextType = { \r\n    user: User | undefined,\r\n    loginWithGoogle : () => Promise<void>\r\n};\r\n\r\ntype AuthContextProviderProps = {\r\n    children : ReactNode\r\n}\r\n\r\nexport function AuthContextProvider(props : AuthContextProviderProps) {\r\n\r\n    useEffect(() =>{\r\n\r\n        const unsubscribe = auth.onAuthStateChanged(user =>{\r\n    \r\n          if (user){\r\n            \r\n            const {displayName, photoURL, uid} = user;\r\n          \r\n            if(!displayName || !uid || !photoURL){\r\n    \r\n              throw new Error(\"Usuário sem nome ou sem ID\")\r\n      \r\n            }\r\n    \r\n            setUser({\r\n              id: uid, \r\n              name: displayName,\r\n              avatar: photoURL\r\n            })\r\n          }\r\n    \r\n        })\r\n    \r\n        return () => {\r\n          \r\n          unsubscribe();\r\n        \r\n        }\r\n        \r\n      }, []);\r\n    \r\n      const [user, setUser] = useState<User>();\r\n    \r\n      async function loginWithGoogle(){\r\n        \r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n      \r\n        const result = await auth.signInWithPopup(provider);\r\n    \r\n          if (result.user){\r\n            \r\n            const {displayName, photoURL, uid} = result.user;\r\n          \r\n            if(!displayName || !uid || !photoURL){\r\n    \r\n              throw new Error(\"Usuário sem nome ou sem ID\")\r\n      \r\n            }\r\n    \r\n            setUser({\r\n              id: uid, \r\n              name: displayName,\r\n              avatar: photoURL\r\n            })\r\n          }\r\n      }\r\n\r\n    return(\r\n        <AuthContext.Provider value={{user, loginWithGoogle}}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}","import {useContext} from \"react\";\r\nimport { AuthContext } from \"../contexts/AuthContextProvider\";\r\n\r\nexport function UseAuth(){\r\n\r\n    const value = useContext(AuthContext);\r\n\r\n    return value;\r\n\r\n}","import wallPaper from '../assets/illustration.svg';\r\nimport logo from '../assets/logo.svg';\r\nimport googleIcon from '../assets/google-icon.svg';\r\nimport {Button} from '../components/Button';\r\nimport '../styles/auth.scss';\r\nimport '../styles/button.scss';\r\nimport {useHistory} from 'react-router-dom'\r\nimport {firebase, auth, database} from '../services/firebase';\r\nimport { UseAuth } from '../hooks/UseAuth';\r\nimport { FormEvent } from 'react';\r\nimport { useState } from 'react';\r\n\r\n\r\nexport function Home(){\r\n\r\n    let history = useHistory();\r\n\r\n    const {user, loginWithGoogle} = UseAuth();\r\n\r\n    async function navigateToNewRoom() {\r\n\r\n        if(!user){\r\n\r\n            await loginWithGoogle();\r\n        }\r\n        \r\n        history.push('/rooms/new')\r\n    \r\n    }\r\n\r\n    const [roomID, setRoomID] = useState('');\r\n\r\n    async function handleJoinRoom(event : FormEvent) {\r\n        \r\n        event.preventDefault();\r\n\r\n        console.log(roomID);\r\n\r\n        if(roomID.trim() === \" \"){ return };\r\n\r\n        const rooms = await database.ref(`rooms/${roomID}`).get();\r\n\r\n        if(!rooms.exists()){ \r\n            alert('Room does not exists')\r\n            return;\r\n        };\r\n\r\n        history.push(`/rooms/${roomID}`)\r\n        \r\n    }\r\n    \r\n    return  <div id=\"page-auth\">\r\n                <aside>\r\n                    <img src={wallPaper} alt=\"\" />\r\n                    <strong>Um simples texto de teste</strong>\r\n                    <p>Um simples texto de teste. Um simples texto de teste</p>\r\n                </aside>\r\n\r\n                <main>\r\n                    <div className=\"main-content\">\r\n                        <img src={logo} alt=\"\" />\r\n                        <button className=\"create-room\" onClick={navigateToNewRoom}> <img src={googleIcon} alt=\"\" />Entre na sala com Google</button>\r\n                        <div className=\"separator\">Ou entre numa sala</div>\r\n                        <form \r\n                            onSubmit={handleJoinRoom}\r\n                        >\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Nome da sala\"\r\n                                onChange={event=>{\r\n                                    setRoomID(event.target.value)\r\n                                }}\r\n                                value={roomID}\r\n                            />\r\n                            <Button type=\"submit\">Entrar na sala</Button>\r\n                        </form>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n}","import wallPaper from '../assets/illustration.svg';\r\nimport logo from '../assets/logo.svg';\r\nimport googleIcon from '../assets/google-icon.svg';\r\nimport {Button} from '../components/Button';\r\nimport '../styles/auth.scss';\r\nimport '../styles/button.scss';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport {UseAuth} from '../hooks/UseAuth';\r\nimport {FormEvent} from 'react';\r\nimport {useState} from 'react';\r\nimport { database } from '../services/firebase';\r\nimport { async } from 'q';\r\nimport { RoomCode } from '../components/RoomCode';\r\n\r\nexport function NewRoom(){\r\n\r\n    const {user} = UseAuth();\r\n\r\n    const [newRoom, setNewRoom] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    async function navigateToNewRoom(event: FormEvent){\r\n        \r\n        event.preventDefault();\r\n        \r\n        console.log(newRoom);\r\n\r\n        if(newRoom.trim() === \" \"){return};\r\n\r\n        const roomRef = database.ref('rooms');\r\n\r\n        const firebaseRoom = await roomRef.push({\r\n            roomName: newRoom,\r\n            authorID: user?.id\r\n        });\r\n\r\n\r\n        history.push(`/rooms/${firebaseRoom.key}`);\r\n        \r\n    }\r\n    \r\n\r\n    return  (\r\n        <div id=\"page-auth\">\r\n            <aside>\r\n                <img src={wallPaper} alt=\"\" />\r\n                <strong>Um simples texto de teste</strong>\r\n                <p>Um simples texto de teste. Um simples texto de teste</p>\r\n            </aside>\r\n\r\n            <main>               \r\n                <div className=\"main-content\">\r\n                    <img src={logo} alt=\"\" />\r\n                    <br/>\r\n                    <h1>{user?.name}</h1>\r\n                    <h2>Criar um nova sala</h2>\r\n                    \r\n                    <form \r\n                        onSubmit ={navigateToNewRoom}\r\n                    >\r\n                        <input\r\n                            type=\"text\"\r\n                            onChange ={event => {setNewRoom(event.target.value)}}\r\n                            value={newRoom}\r\n                            placeholder=\"Nome da sala\"\r\n                        />\r\n                        <Button type=\"submit\">Criar sala</Button>\r\n                    </form>\r\n                    <p>Quer entrar em uma sala existente? <Link to=\"/\">Clique aqui</Link></p>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/copy.2f36f99e.svg\";","\r\n\r\nimport copyImg from '../assets/copy.svg';\r\nimport '../styles/room-code.scss';\r\n\r\ntype RoomCodeProps = {\r\n    roomCode : string;\r\n}\r\n\r\nexport function RoomCode(props : RoomCodeProps) {\r\n\r\n\r\n    function copyRoomCodeToClipboard() {\r\n    \r\n        navigator.clipboard.writeText(props.roomCode);\r\n    }\r\n\r\n    return(\r\n        <button onClick={copyRoomCodeToClipboard} className=\"room-code\">\r\n            <div>\r\n                <img src={copyImg} alt=\"Copy Room Code\" />\r\n            </div>\r\n            <span>{props.roomCode}</span>\r\n        </button>\r\n    )\r\n    \r\n}","import { ReactNode } from \"react\"\r\nimport { isPropertySignature } from \"typescript\"\r\nimport '../styles/question.scss'\r\n\r\ntype QuestionProps = {\r\n    content: string,\r\n    author: {\r\n        name: string,\r\n        avatar: string\r\n    }\r\n    children?: ReactNode,\r\n    isAnswered?: boolean,\r\n    isHighlighted?: boolean\r\n}\r\n\r\n\r\nexport function Question({\r\n    content, \r\n    author,\r\n    isAnswered = false,\r\n    isHighlighted = false,\r\n    children\r\n}: QuestionProps){\r\n    return (\r\n\r\n        <div \r\n            className={`question ${isAnswered ? 'answered' : ''} ${isHighlighted && !isAnswered ? 'highlighted' : ''}`}\r\n        >\r\n            <p>{content}</p>\r\n            <footer>\r\n                \r\n                <div className=\"user-info\">\r\n                    <img src={author.avatar} alt={author.name}/>\r\n                    <span>{author.name}</span>\r\n                </div>\r\n                <div>{children}</div>\r\n            </footer>\r\n        </div>\r\n\r\n    )\r\n}","import { link } from \"fs\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { isCallLikeExpression } from \"typescript\";\r\nimport {database, auth, firebase} from \"../services/firebase\"\r\nimport { UseAuth } from \"./UseAuth\";\r\n\r\n\r\ntype FirebaseQuestions = Record<string, {\r\n    author: {\r\n        avatar: string, \r\n        name: string\r\n    }\r\n    content: string,\r\n    isAnswered: boolean,\r\n    isHighlighted: boolean \r\n    likes: Record<string, {\r\n        authorId: string\r\n    }>\r\n}>\r\n\r\ntype QuestionType = {\r\n    id: string,\r\n    author: {\r\n        avatar: string, \r\n        name: string\r\n    }\r\n    content: string,\r\n    isAnswered: boolean,\r\n    isHighlighted: boolean,\r\n    likeCount: number,\r\n    likeId: string | undefined\r\n}\r\n\r\nexport function useRoom(roomId: string){\r\n    const {user} = UseAuth();\r\n    const [questions, setQuestions] = useState<QuestionType[]>([]);\r\n    const [title, setTitle] = useState('');\r\n\r\n    useEffect(()=>{\r\n\r\n        \r\n        const roomRef = database.ref(`/rooms/${roomId}`);\r\n\r\n        console.log(roomRef);\r\n\r\n        roomRef.on('value', room => {\r\n            \r\n            const roomValues = room.val();\r\n\r\n            const firebaseQuestions: FirebaseQuestions = roomValues.question ?? {};\r\n\r\n            const parsedQuestions = Object.entries(firebaseQuestions).map(([key, value]) => {\r\n\r\n                return {\r\n                    id: key,\r\n                    author: {\r\n                        avatar: value.author.avatar, \r\n                        name: value.author.name\r\n                    },\r\n                    content: value.content,\r\n                    isAnswered: value.isAnswered,\r\n                    isHighlighted: value.isHighlighted,\r\n                    likeCount: Object.values(value.likes ?? {}).length,\r\n                    likeId: Object.entries(value.likes ?? {}).find(([key, liked]) => liked.authorId === user?.id)?.[0]\r\n                    //likeId: Object.entries(value.likes ?? {}).forEach(element =>{})\r\n                }\r\n            });\r\n\r\n            setTitle(roomValues.roomName)\r\n            setQuestions(parsedQuestions);\r\n\r\n        })\r\n\r\n        return () => {\r\n            roomRef.off('value')\r\n        }\r\n\r\n    }, [roomId, user?.id])\r\n\r\n    return {questions, title}\r\n\r\n}","import { ButtonHTMLAttributes, FormEvent, Provider } from 'react';\r\nimport logoImg from '../assets/logo.svg';\r\nimport { Button } from '../components/Button';\r\nimport '../styles/rooms.scss';\r\nimport { RoomCode } from '../components/RoomCode';\r\nimport { useParams } from 'react-router';\r\nimport { useState } from 'react';\r\nimport { auth, database } from '../services/firebase';\r\nimport { UseAuth } from '../hooks/UseAuth';\r\nimport { useEffect } from 'react';\r\nimport { Question } from '../components/Question';\r\nimport { useRoom } from '../hooks/useRoom'\r\n\r\ntype UseParamsProps = {\r\n    id: string;\r\n}\r\n\r\nexport function Room() {\r\n   \r\n    const {user} = UseAuth()\r\n    const params = useParams<UseParamsProps>();\r\n    const roomId = params.id;\r\n    const [question, setQuestion] = useState('');    \r\n    const {questions, title} = useRoom(roomId);\r\n\r\n \r\n    async function handleLike(questionId: string, likeId: string | undefined) {\r\n\r\n        if(likeId){\r\n\r\n            await database.ref(`/rooms/${roomId}/question/${questionId}/likes/${likeId}`).remove();\r\n\r\n        } else {\r\n            await database.ref(`/rooms/${roomId}/question/${questionId}/likes`).push({\r\n                authorID: user?.id\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n \r\n    async function handleSendQuestion(event : FormEvent){\r\n        event.preventDefault();\r\n        if(question === \" \"){\r\n            return\r\n        }\r\n        \r\n        const questionUnite = {\r\n            content: question,\r\n            author: {\r\n                name: user?.name,\r\n                avatar: user?.avatar\r\n            },\r\n            isHighlighted : false,\r\n            isAnswered : false\r\n        }\r\n\r\n        await database.ref(`rooms/${roomId}/question`).push(questionUnite);\r\n        setQuestion('');\r\n    }\r\n    \r\n    \r\n    return (\r\n        \r\n        <div id=\"page-room\">\r\n            <header>\r\n                <div className=\"content\">\r\n                    <img src={logoImg} alt=\"Letmeask\"/>\r\n                    <RoomCode roomCode={roomId}/>\r\n                </div>\r\n            </header>\r\n\r\n            <main>\r\n                <div className=\"room-title\">\r\n                    <h1>Sala {title}</h1>\r\n                    {questions.length > 0 && <span>{questions.length} pergunta(s)</span> }\r\n                    \r\n                </div>\r\n                \r\n                <form onSubmit={handleSendQuestion}>\r\n                    <textarea\r\n                        placeholder=\"Qual é a sua pergunta?\"\r\n                        onChange={event => {\r\n                            setQuestion(event.target.value);\r\n                        }}\r\n                        value={question}\r\n                    />\r\n                    <div className=\"form-footer\">\r\n                        {user ? (\r\n                            <div className=\"user-info\">\r\n                                <img src={user.avatar} alt={user.name}/>\r\n                                <span>{user.name}</span>\r\n                            </div>\r\n                        ) : (\r\n                            <span>Para enviar uma pergunta,  <button>faça seu login</button> .</span>\r\n                        )}\r\n                        \r\n                        <Button type=\"submit\" disabled={!user}>Enviar Pergunta</Button>\r\n                    </div>\r\n                </form>\r\n\r\n                <div className=\"question-list\">\r\n                    {questions.map(question => {\r\n                        return (\r\n                            <Question\r\n                                key = {question.id}\r\n                                content={question.content}\r\n                                author={question.author}\r\n                                isAnswered={question.isAnswered}\r\n                                isHighlighted={question.isHighlighted}\r\n                            >\r\n                                {!question.isAnswered && (\r\n                                <>\r\n                                    <button\r\n                                        className={`like-button ${question.likeId ? ' liked' : ''}`} \r\n                                        type=\"button\"\r\n                                        area-label=\"marcar como 'gostei'\"\r\n                                        onClick={ () => {handleLike(question.id, question.likeId )}}\r\n                                    >\r\n                                    {question.likeCount > 0 && <span>{question.likeCount}</span>}\r\n                                        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path d=\"M7 22H4C3.46957 22 2.96086 21.7893 2.58579 21.4142C2.21071 21.0391 2 20.5304 2 20V13C2 12.4696 2.21071 11.9609 2.58579 11.5858C2.96086 11.2107 3.46957 11 4 11H7M14 9V5C14 4.20435 13.6839 3.44129 13.1213 2.87868C12.5587 2.31607 11.7956 2 11 2L7 11V22H18.28C18.7623 22.0055 19.2304 21.8364 19.5979 21.524C19.9654 21.2116 20.2077 20.7769 20.28 20.3L21.66 11.3C21.7035 11.0134 21.6842 10.7207 21.6033 10.4423C21.5225 10.1638 21.3821 9.90629 21.1919 9.68751C21.0016 9.46873 20.7661 9.29393 20.5016 9.17522C20.2371 9.0565 19.9499 8.99672 19.66 9H14Z\" stroke=\"#737380\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                        </svg>\r\n                                    </button>\r\n                                </>\r\n                                )}\r\n                            </Question>\r\n                        )\r\n                    })};\r\n                </div>\r\n            </main>           \r\n        </div>\r\n\r\n    )\r\n    \r\n}","export default __webpack_public_path__ + \"static/media/delete.22ba6e00.svg\";","export default __webpack_public_path__ + \"static/media/check.5dfa6ed6.svg\";","export default __webpack_public_path__ + \"static/media/answer.4502a8d5.svg\";","import { ButtonHTMLAttributes, FormEvent, Provider } from 'react';\r\nimport logoImg from '../assets/logo.svg';\r\nimport deleteImg from '../assets/delete.svg';\r\nimport { Button } from '../components/Button';\r\nimport '../styles/rooms.scss';\r\nimport { RoomCode } from '../components/RoomCode';\r\nimport { useParams } from 'react-router';\r\nimport { useState } from 'react';\r\nimport { auth, database } from '../services/firebase';\r\nimport { UseAuth } from '../hooks/UseAuth';\r\nimport { useEffect } from 'react';\r\nimport { Question } from '../components/Question';\r\nimport { useRoom } from '../hooks/useRoom'\r\nimport { stringify } from 'querystring';\r\nimport {useHistory} from 'react-router-dom';\r\nimport checkImg from '../assets/check.svg';\r\nimport answerImg from '../assets/answer.svg';\r\n\r\ntype UseParamsProps = {\r\n    id: string;\r\n}\r\n\r\n\r\nexport function AdminRoom() {\r\n\r\n    \r\n    const {user} = UseAuth()\r\n    const params = useParams<UseParamsProps>();\r\n    const roomId = params.id;\r\n    const [question, setQuestion] = useState(''); \r\n    const {questions, title} = useRoom(roomId);\r\n    const history = useHistory();\r\n\r\n    \r\n\r\n    async function handleEndRoom() {\r\n\r\n        await database.ref(`/rooms/${roomId}`).update({\r\n            endedAt: new Date()\r\n        });\r\n\r\n        history.push('/');\r\n        \r\n    }\r\n\r\n    async function handleDeleteQuestion(questionId : string){\r\n\r\n        if(window.confirm('Você quer mesmo deletar essa pergunta?')){\r\n            \r\n            await database.ref(`/rooms/${roomId}/question/${questionId}`).remove();\r\n        }\r\n\r\n    }\r\n\r\n    async function handleSendQuestion(event : FormEvent){\r\n        event.preventDefault();\r\n        if(question === \" \"){\r\n            return\r\n        }\r\n        \r\n        const questionUnite = {\r\n            content: question,\r\n            author: {\r\n                name: user?.name,\r\n                avatar: user?.avatar\r\n            },\r\n            isHighlighted : false,\r\n            isAnswered : false\r\n\r\n        }\r\n\r\n        await database.ref(`rooms/${roomId}/question`).push(questionUnite);\r\n        setQuestion('');\r\n    }\r\n\r\n    async function handleCheckQuestionAsAnswered(questionId: string) {\r\n        await database.ref(`rooms/${roomId}/question/${questionId}`).update({\r\n            isAnswered : true\r\n        });\r\n    }\r\n    \r\n    async function handleHighlightQuestion(questionId: string) {\r\n        await database.ref(`rooms/${roomId}/question/${questionId}`).update({\r\n            isHighlighted : true\r\n        });\r\n    }\r\n    \r\n    return (\r\n        \r\n        <div id=\"page-room\">\r\n            <header>\r\n                <div className=\"content\">\r\n                    <img src={logoImg} alt=\"Letmeask\"/>\r\n                    <div>\r\n                        <RoomCode roomCode={roomId}/>\r\n                        <Button onClick={handleEndRoom} isOutlined>Encerrar sala</Button>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n\r\n            <main>\r\n                <div className=\"room-title\">\r\n                    <h1>Sala {title}</h1>\r\n                    {questions.length > 0 && <span>{questions.length} pergunta(s)</span> }\r\n                    \r\n                </div>\r\n\r\n                <div className=\"question-list\">\r\n                    {questions.map(question => {\r\n                        return (\r\n                            <Question\r\n                                key = {question.id}\r\n                                content={question.content}\r\n                                author={question.author}\r\n                                isAnswered={question.isAnswered}\r\n                                isHighlighted={question.isHighlighted}\r\n                            >\r\n                                {!question.isAnswered && (\r\n                                    <>\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            onClick={() => handleCheckQuestionAsAnswered(question.id)}\r\n                                        >                                   \r\n                                            <img src={checkImg} alt=\"marcar pergunta com respondida\" />\r\n\r\n                                        </button>\r\n\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            onClick={() => handleHighlightQuestion(question.id)}\r\n                                        >                                   \r\n                                            <img src={answerImg} alt=\"dar destaque à pergunta\" />\r\n\r\n                                        </button>\r\n                                    </>\r\n                                )}\r\n\r\n                                <button\r\n                                    type=\"button\"\r\n                                    onClick={() => handleDeleteQuestion(question.id)}\r\n                                >                                   \r\n                                    <img src={deleteImg} alt=\"delete\" />\r\n\r\n                                </button>\r\n                            </Question>\r\n\r\n                        )\r\n                    })};\r\n                </div>\r\n            </main>           \r\n        </div>\r\n\r\n    )\r\n    \r\n}","import React from 'react';\nimport {Home} from './pages/Home';\nimport {NewRoom} from './pages/NewRoom';\nimport './styles/global.scss';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport {createContext, useEffect, useState} from 'react';\nimport {firebase, auth} from './services/firebase';\nimport userEvent from '@testing-library/user-event';\nimport { type } from 'os';\nimport {AuthContextProvider} from './contexts/AuthContextProvider'\nimport { Room } from './pages/Room';\nimport { createEmitAndSemanticDiagnosticsBuilderProgram } from 'typescript';\nimport { AdminRoom } from './pages/AdmininRoom';\n\nfunction App() {\n  \n  return (\n    <BrowserRouter>\n      <AuthContextProvider>\n        <Switch>\n          <Route path=\"/\" exact component={Home}/>\n          <Route path=\"/rooms/new\" component={NewRoom}/>    \n          <Route path=\"/rooms/:id\" component={Room}/>    \n          <Route path=\"/admin/rooms/:id\" component={AdminRoom}/>    \n        </Switch>\n      </AuthContextProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './services/firebase'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}